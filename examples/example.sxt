<CODE>
    def calculate_fibonacci(n):
        """Calculate the nth Fibonacci number."""
        if n <= 1:
            return n
        else:
            return calculate_fibonacci(n-1) + calculate_fibonacci(n-2)

    # Test the function
    print(calculate_fibonacci(10))
</CODE>

<COMMANDS>
    # Go back and fix the algorithm to be more efficient
    ARROW_UP 1
    ARROW_LEFT 2
    ENTER
    ENTER
</COMMANDS>

<CODE>
    # More efficient iterative version
    def fib_iterative(n):
        if n <= 1:
            return n
        
        a, b = 0, 1
        for i in range(2, n + 1):
            a, b = b, a + b
        return b

    print("Iterative result:", fib_iterative(10))
</CODE>

<COMMANDS>
    # Add some spacing
    ENTER 2
</COMMANDS>

<CODE>
    # Compare both implementations
    import time

    start = time.time()
    result1 = calculate_fibonacci(35)
    time1 = time.time() - start

    start = time.time() 
    result2 = fib_iterative(35)
    time2 = time.time() - start

    print(f"Recursive: {result1} (took {time1:.4f}s)")
    print(f"Iterative: {result2} (took {time2:.4f}s)")
</CODE>
